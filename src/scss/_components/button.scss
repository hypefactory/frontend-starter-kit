/*
Buttons
===================================================================
######Basic button layout
Creates a basic button. Button type classes can be added by using multiple classes on the `.btn` element.
Adding the class `is--disabled` changes the element to a disabled button.
```
<button class="btn">
    Basic button
</button>
<button class="btn is--disabled">
    Disabled button
</button>
```
*/

.btn {
  @include unitize-padding(4, 20);
  @include unitize(line-height, 32);
  @include border-radius(4px);
  @include appearance();
  @include unitize(font-size, $font-size-base);
  background: transparent;
  box-sizing: border-box;
  -webkit-font-smoothing: inherit;
  display: inline-block;
  position: relative;
  font-weight: $font-base-weight;
  text-decoration: none;
  text-align: left;
  cursor: pointer;
  border: 1px solid $btn-default-link-color;
  color: $btn-default-link-color;
  min-width: 30px;
  white-space: nowrap;
  z-index: $zindex-buttons;

  /** Button icon font size */
  [class^="icon--"] {
    @include unitize($btn-icon-size, 16, font-size);
  }

  /** Larger icon */
  .is--large {
    $largeFontSize: $font-size-base + 2;
    @include unitize(font-size, $largeFontSize);
  }

  /*
  ######Icon alignment
  To work properly the button needs the class `is--icon-left` or `is--icon-right` and an `icon` inside it.
  ```
  <button class="btn is--icon-left">
      <i class="icon--account"></i>
      Icon left
  </button>
  <button class="btn is--icon-right">
      <i class="icon--account"></i>
      Icon right
  </button>
  ```
  */
  &.is--icon-right {
    @include unitize(padding-right, 36);

    [class^="icon--"] {
      @include unitize-height(16);
      @include unitize(line-height, 32);
      @include unitize-margin(-16, 0, 0, 0);
      @include unitize(right, 12);
      font-weight: $font-base-weight;
      display: block;
      position: absolute;
      top: 50%;
    }
  }

  &.is--icon-left {
    @include unitize(padding-left, 36);

    [class^="icon--"] {
      @include unitize-height(16);
      @include unitize(line-height, 32);
      @include unitize-margin(-16, 0, 0, 0);
      @include unitize(left, 12);
      font-weight: $font-base-weight;
      display: block;
      position: absolute;
      top: 50%;
    }
  }

  &:disabled,
  &:disabled:hover,
  &.is--disabled,
  &.is--disabled:hover {
    @include opacity(0.5);
    background: #f2f2f2;
    border: 1px solid #555;
    color: #555;
    cursor: not-allowed;
    text-decoration: none;
  }

  &:hover {
    text-decoration: underline;
    color: $btn-default-link-color;
  }

  &:focus {
    outline: none;
  }

  /*
  ######Button size class
  Adding a button-size class creates a larger or smaller button or changes the button properies.
  Options: `is--large`, `is--small`, `is--full`, `is--center`
  ```
  <button class="btn is--large">
      Large button
  </button>
  <button class="btn is--small">
      Small button
  </button>
  ```
  */

  /** State: Small button */
  &.is--small {
    @include unitize(line-height, 28);
  }

  /** State: Medium button */
  &.is--medium {
    @include unitize(line-height, 32);
    @include unitize(height, 42);
  }

  /** State: Large button */
  &.is--large {
    @include unitize(line-height, 36);
    @include unitize(height, 46);
  }

  /** State: Button with 100% width */
  &.is--full {
    display: block;
  }

  /** State: Button with text align center */
  &.is--center {
    text-align: center;
  }

  &.is--primary {
    @include unitize-padding(2, 12);
    @include unitize(line-height, 34);
    @include linear-gradient($btn-primary-top-bg, $btn-primary-bottom-bg);
    border: 0 none;
    color: $btn-primary-text-color;
    @include transition(box-shadow .25s);
    @include shadow-8dp($brand-primary);

    &:hover {
      background: $btn-primary-hover-bg;
      color: $btn-primary-hover-text-color;
      text-decoration: none;
      @include shadow-16dp($brand-primary);
    }

    /** State: Small button */
    &.is--small {
      @include unitize(line-height, 30);
    }

    /** State: Large button */
    &.is--large {
      @include unitize(line-height, 38);
    }
  }

  &.is--secondary {
    @include unitize-padding(2, 12);
    @include unitize(line-height, 34);
    background: $brand-secondary;
    border: 0 none;
    color: $btn-secondary-text-color;
    @include transition(box-shadow .25s);
    @include shadow-6dp($brand-secondary);

    &:hover {
      background: $btn-secondary-hover-bg;
      color: $btn-secondary-hover-text-color;
      text-decoration: none;
      @include shadow-16dp($brand-secondary);
    }

    /** State: Small button */
    &.is--small {
      @include unitize(line-height, 30);
    }

    /** State: Large button */
    &.is--large {
      @include unitize(line-height, 38);
    }
  }

  &.is--link {
    @include unitize-padding(2, 12);
    @include unitize(line-height, 34);

    border: 0 none;
    background: transparent;
    color: $btn-default-link-color;
    text-decoration: none;

    &:hover {
      text-decoration: underline;
      color: $btn-default-link-color;
      background: transparent;
    }

    /** State: Small button */
    &.is--small {
      @include unitize(line-height, 30);
    }

    /** State: Large button */
    &.is--large {
      @include unitize(line-height, 38);
    }
  }
}

/*
######Button type class
Options: `is--primary`, `is--secondary`
```
<button class="btn is--primary">
    Primary
</button>
<button class="btn is--secondary">
    Secondary
</button>
```
*/
